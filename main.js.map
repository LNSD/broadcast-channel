{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./src/main.ts","webpack:///../../packages/broadcast-channel/src/index.ts","webpack:///../../packages/broadcast-channel/src/lib/broadcast-channel.ts","webpack:///../../packages/broadcast-channel/src/lib/channel/fake.ts","webpack:///../../packages/broadcast-channel/src/lib/channel/index.ts","webpack:///../../packages/broadcast-channel/src/lib/channel/localstorage.ts","webpack:///../../packages/broadcast-channel/src/lib/channel/message-event.ts","webpack:///../../packages/broadcast-channel/src/lib/channel/native.ts","webpack:///../../packages/broadcast-channel/src/lib/utils.ts"],"sourcesContent":["import BroadcastChannel from '@lnsd/broadcast-channel';\n\nconst channel = new BroadcastChannel<string>('demo');\nchannel.onmessage = function(message) {\n  displayReceivedMessage(message.data);\n};\n\nconst messageInput = <HTMLInputElement>document.getElementById('message-input');\nconst submitButton = <HTMLInputElement>document.getElementById('submit-button');\nconst messagesBox = document.getElementById('messages');\n\nmessageInput.onkeyup = function (event) {\n  const message = messageInput.value;\n\n  if (message !== '' && event.key === 'Enter') {\n    postMessage(message);\n    clearMessageInput();\n    disableSubmitButton();\n    return;\n  }\n\n  if (message === '') {\n    disableSubmitButton();\n  } else {\n    enableSubmitButton();\n  }\n};\n\nsubmitButton.onclick = function () {\n  const message = messageInput.value;\n  if (message === '') {\n    return;\n  }\n\n  postMessage(message);\n  clearMessageInput();\n  disableSubmitButton();\n};\n\nfunction postMessage(message: string) {\n  if (message === '') {\n    return;\n  }\n\n  channel.postMessage(message);\n  displayEmittedMessage(message);\n}\n\nfunction disableSubmitButton() {\n  submitButton.classList.add('is-disabled');\n}\n\nfunction enableSubmitButton() {\n  submitButton.classList.remove('is-disabled');\n}\n\nfunction clearMessageInput() {\n  messageInput.value = '';\n}\n\nfunction messageBalloon(message: string, side: 'left' | 'right'): HTMLElement {\n  const section = document.createElement('div');\n  section.classList.add('message');\n  section.classList.add(`-${side}`);\n\n  const balloon = document.createElement('div');\n  balloon.classList.add('nes-balloon');\n  balloon.classList.add(`from-${side}`);\n\n  const messageContainer = document.createElement('p');\n\n  const text = document.createTextNode(message);\n\n  section.appendChild(balloon);\n  balloon.appendChild(messageContainer);\n  messageContainer.appendChild(text);\n\n  return section;\n}\n\nfunction displayEmittedMessage(message: string): void {\n  const balloon = messageBalloon(message, 'left');\n  messagesBox.appendChild(balloon);\n}\n\nfunction displayReceivedMessage(message: string): void {\n  const balloon = messageBalloon(message, 'right');\n  messagesBox.appendChild(balloon);\n}\n\n","import {BroadcastChannel} from './lib/types';\nimport {Options} from './lib/options';\nimport {BroadcastChannelInstance} from './lib/broadcast-channel';\n\n\nexport {\n  NativeChannel,\n  LocalStorageChannel,\n  FakeChannel,\n  messageEvent, messageErrorEvent\n} from './lib/channel';\nexport type {Channel, ChannelFactory, LocalStorageOptions} from './lib/channel'\nexport type {MessageEvent, OnMessageListener, BroadcastChannel} from './lib/types';\n\nexport default BroadcastChannelInstance as {\n  prototype: BroadcastChannel;\n  new<T>(name: string, options?: Options): BroadcastChannel<T>;\n};\n","import type { BroadcastChannel, BroadcastChannelEventTarget, OnMessageListener } from './types';\n\nimport EventTarget from '@ungap/event-target';\nimport { Channel, defaultChannelsList, getOptimalChannel } from './channel';\nimport { Options } from './options';\n\nfunction channel(name: string, options?: Options): Channel {\n  const channelFactory = options?.backend ?? getOptimalChannel(...defaultChannelsList);\n  if (channelFactory === null) {\n    throw new Error('BroadcastChannel cannot be used. Not supported');\n  }\n\n  // Get channel specific options\n  const channelOptions = options?.options?.[channelFactory.optionsKey];\n\n  // Create backend channel instance\n  return channelFactory.getChannel(name, channelOptions);\n}\n\nexport class BroadcastChannelInstance<T> implements BroadcastChannel<T> {\n  private channel: Channel | null;\n\n  private emitter: BroadcastChannelEventTarget<T> = new EventTarget();\n  addEventListener = this.emitter.addEventListener.bind(this);\n  removeEventListener = this.emitter.removeEventListener.bind(this);\n  dispatchEvent = this.emitter.dispatchEvent.bind(this);\n\n  constructor(public readonly name: string, options?: Options) {\n    this.channel = channel(name, options);\n    this.channel.onmessage<T>(ev => {\n      this._onmessage?.(ev);\n      this.emitter.dispatchEvent(ev);\n    });\n    this.channel.onmessageerror<T>(ev => {\n      this._onmessageerror?.(ev);\n      this.emitter.dispatchEvent(ev);\n    });\n  }\n\n  private _onmessage: OnMessageListener<T> | null = null;\n\n  get onmessage(): OnMessageListener<T> | null {\n    return this._onmessage;\n  }\n\n  set onmessage(listener: OnMessageListener<T> | null) {\n    if (!listener) {\n      return;\n    }\n    this._onmessage = listener;\n  }\n\n  private _onmessageerror: OnMessageListener<T> | null = null;\n\n  get onmessageerror(): OnMessageListener<T> | null {\n    return this._onmessageerror;\n  }\n\n  set onmessageerror(listener: OnMessageListener<T> | null) {\n    if (!listener) {\n      return;\n    }\n    this._onmessageerror = listener;\n  }\n\n  close(): void {\n    if (this.channel === null) {\n      return;\n    }\n\n    this.channel.close();\n    this.channel = null;\n  }\n\n  postMessage(message: T): void {\n    if (this.channel === null) {\n      throw new DOMException('Already closed', 'InvalidStateError');\n    }\n\n    this.channel.postMessage(message);\n  }\n}\n","import { Channel, ChannelFactory, OnMessageListener } from './channel';\nimport { defer, uuidv4 } from '../utils';\nimport { deserialize, serialize, SerializedRecord } from '@ungap/structured-clone';\nimport { messageErrorEvent, messageEvent } from './message-event';\n\n// Fixture management\n\nconst fakeChannels: Map<string, Set<FakeChannel>> = new Map();\n\nexport function resetFakeChannel() {\n  fakeChannels.clear();\n}\n\n\n// Channel\n\nclass FakeChannel implements Channel {\n  readonly uuid: string = uuidv4();\n\n  public _onmessage: OnMessageListener | null = null;\n  private _onmessageerror: OnMessageListener | null = null;\n\n  private closed = false;\n\n  constructor(private readonly name: string) {\n  }\n\n  onmessage<T>(listener: OnMessageListener<T>): void {\n    this._onmessage = ev => {\n      listener(new MessageEvent('message', { data: deserialize(ev.data) }));\n    };\n  }\n\n  onmessageerror<E>(listener: OnMessageListener<E>): void {\n    this._onmessageerror = listener;\n  }\n\n  close(): void {\n    if (this.closed) {\n      return;\n    }\n\n    const listeners = fakeChannels.get(this.name);\n    if (listeners === undefined) {\n      return;\n    }\n\n    listeners.delete(this);\n\n    if (listeners.size === 0) {\n      fakeChannels.delete(this.name);\n    }\n\n    this.closed = true;\n  }\n\n  postMessage(message: any): void {\n    if (this.closed) {\n      return;\n    }\n\n    // Data serialization\n    let data: SerializedRecord;\n    try {\n      data = serialize(message);\n    } catch (err: any) {\n      this.dispatchMessageError(new DOMException(`Uncloneable value: ${err.message}`, 'DataCloneError'));\n      return;\n    }\n\n    defer(() => this.dispatchMessage(data));\n  }\n\n  private dispatchMessage(data: any) {\n    const listeners = fakeChannels.get(this.name);\n    if (listeners === undefined) {\n      return;\n    }\n\n    for (const channel of listeners) {\n      if (channel === this) {\n        continue;\n      }\n\n      if (channel._onmessage !== null) {\n        channel._onmessage(messageEvent(data));\n      }\n    }\n  }\n\n  private dispatchMessageError(err: Error) {\n    if (this._onmessageerror === null) {\n      return;\n    }\n    this._onmessageerror(messageErrorEvent(err));\n  }\n}\n\n\n// Factory\n\nconst factory: ChannelFactory = {\n  optionsKey: 'fake',\n\n  getChannel(name: string): Channel {\n    const channel = new FakeChannel(name);\n\n    let listeners = fakeChannels.get(name);\n    if (listeners === undefined) {\n      listeners = new Set<FakeChannel>();\n    }\n\n    listeners.add(channel);\n    fakeChannels.set(name, listeners);\n\n    return channel;\n  },\n\n  canBeUsed(): boolean {\n    return true;\n  },\n};\n\nexport default factory;\n","import { Channel, ChannelFactory } from './channel';\nimport { default as NativeChannel } from './native';\nimport { default as LocalStorageChannel, Options as LocalStorageOptions } from './localstorage';\nimport { default as FakeChannel } from './fake';\nimport { messageErrorEvent, messageEvent } from './message-event';\n\n\nconst defaultChannelsList: Array<ChannelFactory> = [NativeChannel, LocalStorageChannel];\n\nfunction getOptimalChannel(...channels: ChannelFactory[]): ChannelFactory | null {\n  const factory = channels.find(channelFactory => channelFactory.canBeUsed());\n  if (factory === undefined) {\n    return null;\n  }\n\n  return factory;\n}\n\nexport type {\n  Channel, ChannelFactory,\n  LocalStorageOptions,\n};\n\nexport {\n  NativeChannel,\n  LocalStorageChannel,\n  FakeChannel,\n  defaultChannelsList,\n  getOptimalChannel,\n  messageEvent, messageErrorEvent,\n};\n","/**\n * A localStorage-only method which uses localstorage and its 'storage'-event\n * This does not work inside of webworkers because they have no access to locastorage\n * This is basically implemented to support IE9 or your grandmothers toaster.\n * @link https://caniuse.com/#feat=namevalue-storage\n * @link https://caniuse.com/#feat=indexeddb\n */\nimport { Channel, ChannelFactory, OnMessageListener } from './channel';\nimport { defer, uuidv4 } from '../utils';\nimport { ObliviousSet } from 'oblivious-set';\nimport { deserialize, serialize, SerializedRecord } from '@ungap/structured-clone';\nimport { messageErrorEvent, messageEvent } from './message-event';\n\n\n// Options\n\nexport type Options = {\n  removeTimeout: number,\n}\n\nexport const defaultOptions: Options = {\n  removeTimeout: 60 * 1000,\n};\n\n\n// LocalStorage\n\ntype StorageEventListener = (ev: StorageEvent) => void;\n\nfunction getLocalStorage(): Storage | undefined {\n  if (typeof window === 'undefined') {\n    return undefined;\n  }\n\n  let localStorage;\n  try {\n    localStorage = window.localStorage;\n  } catch (e) {\n    // New versions of Firefox throw a Security exception\n    // if cookies are disabled. See\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1028153\n  }\n\n  return localStorage;\n}\n\nfunction storageEventListener(key: string, listener: (storageObject: StorageObject) => void) {\n  return (ev: StorageEvent) => {\n    if (ev.key !== key || ev.newValue === null) {\n      return;\n    }\n\n    listener(JSON.parse(ev.newValue));\n  };\n}\n\nfunction addStorageEventListener(listener: StorageEventListener) {\n  window.addEventListener('storage', listener);\n}\n\nfunction removeStorageEventListener(listener: StorageEventListener) {\n  window.removeEventListener('storage', listener);\n}\n\nexport function resetLocalStorage() {\n  const localStorage = getLocalStorage();\n  if (localStorage === undefined) {\n    throw new Error('BroadcastChannel: LocalStorage is not available');\n  }\n\n  // Remove all BroadcastChannel entries\n  Object.keys(localStorage)\n    .filter(key => key.startsWith(KEY_PREFIX))\n    .forEach(key => localStorage.removeItem(key));\n}\n\n\n// Channel\n\ninterface StorageObject {\n  token: string;\n  data: SerializedRecord,\n  senderId: string;\n}\n\nconst KEY_PREFIX = 'lnsd/broadcast-channel-';\n\nclass LocalStorage implements Channel {\n  private readonly uuid: string = uuidv4();\n\n  private closed = false;\n\n  /**\n   * Contains all messages that have been emitted before\n   */\n  private readonly emittedMessagesIds: ObliviousSet;\n\n  private readonly storageListener: StorageEventListener;\n\n  private _onmessage: OnMessageListener | null = null;\n  private _onmessageerror: OnMessageListener | null = null;\n\n  constructor(private readonly name: string, options?: Partial<Options>) {\n    const localStorage = getLocalStorage();\n    if (localStorage === undefined) {\n      throw new Error('BroadcastChannel: LocalStorage not available');\n    }\n\n    const channelOptions = Object.assign({}, defaultOptions, options);\n    this.emittedMessagesIds = new ObliviousSet(channelOptions.removeTimeout);\n\n    this.storageListener = storageEventListener(this.storageKey, ({ senderId, token, data }) => {\n      // No listener\n      if (this._onmessage === null) {\n        return;\n      }\n\n      // Own message\n      if (senderId === this.uuid) {\n        return;\n      }\n\n      // Already emitted\n      if (this.emittedMessagesIds.has(token)) {\n        return;\n      }\n      this.emittedMessagesIds.add(token);\n\n      this._onmessage(messageEvent(data));\n    });\n    addStorageEventListener(this.storageListener);\n  }\n\n  private get storageKey(): string {\n    return KEY_PREFIX + this.name;\n  }\n\n  onmessage<T>(listener: OnMessageListener<T>): void {\n    this._onmessage = ev => listener(messageEvent<T>(deserialize(ev.data)));\n  }\n\n  onmessageerror<E>(listener: OnMessageListener<E>): void {\n    this._onmessageerror = listener;\n  }\n\n  close(): void {\n    if (this.closed) {\n      return;\n    }\n\n    removeStorageEventListener(this.storageListener);\n    this.closed = true;\n  }\n\n  /**\n   * Writes the new message to the storage and fires the storage-event\n   * so other readers can find it.\n   */\n  postMessage(message: any): void {\n    if (this.closed) {\n      return;\n    }\n\n    const localStorage = getLocalStorage();\n    if (localStorage === undefined) {\n      return;\n    }\n\n    // Data serialization\n    let data: SerializedRecord;\n    try {\n      data = serialize(message);\n    } catch (err: any) {\n      this.dispatchMessageError(new DOMException(`Uncloneable value: ${err.message}`, 'DataCloneError'));\n      return;\n    }\n\n    defer(() => this.dispatchMessage(data));\n  }\n\n  private dispatchMessage(data: any) {\n    const key = this.storageKey;\n    const writeObj: StorageObject = {\n      token: uuidv4(),\n      senderId: this.uuid,\n      data: data,\n    };\n\n    const newValue = JSON.stringify(writeObj);\n    localStorage.setItem(key, newValue);\n\n    /**\n     * StorageEvent does not fire the 'storage' event in the window that\n     * changes the state of the local storage. So we fire it manually.\n     */\n    window.dispatchEvent(new StorageEvent('storage', { key, newValue }));\n  }\n\n  private dispatchMessageError(err: Error) {\n    if (this._onmessageerror === null) {\n      return;\n    }\n    this._onmessageerror(messageErrorEvent(err));\n  }\n}\n\n\n// Factory\n\nconst factory: ChannelFactory<Options> = {\n  optionsKey: 'localstorage',\n\n  getChannel(name: string, options?: Partial<Options>): Channel {\n    return new LocalStorage(name, options);\n  },\n\n  canBeUsed() {\n    const localstorage = getLocalStorage();\n    if (localstorage === undefined) {\n      return false;\n    }\n\n    try {\n      const key = '__broadcastchannel_check';\n      localstorage.setItem(key, 'works');\n      localstorage.removeItem(key);\n    } catch (e) {\n      // Safari 10 in private mode will not allow write access to local storage o\n      // and fail with a QuotaExceededError. See:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#Private_Browsing_Incognito_modes\n      return false;\n    }\n\n    return true;\n  },\n};\n\n\nexport default factory;\n","import type { MessageEvent } from '../types';\n\nexport const messageEvent = <T = any>(data: T): MessageEvent => (new MessageEvent('message', { data }));\n\nexport const messageErrorEvent = <E = Error>(error: E): MessageEvent => (new MessageEvent('messageerror', {\n  cancelable: false,\n  data: error,\n}));\n","import { Channel, ChannelFactory, OnMessageListener } from './channel';\n\n\n// Channel\n\nclass NativeChannel implements Channel {\n  private readonly channel: BroadcastChannel;\n\n  constructor(name: string) {\n    this.channel = new BroadcastChannel(name);\n  }\n\n  onmessage<T>(cb: OnMessageListener<T>): void {\n    this.channel.onmessage = cb;\n  }\n\n  onmessageerror<T>(cb: OnMessageListener<T>): void {\n    this.channel.onmessageerror = cb;\n  }\n\n  close(): void {\n    this.channel.close();\n  }\n\n  postMessage(message: any): void {\n    this.channel.postMessage(message);\n  }\n}\n\n\n// Factory\n\nconst factory: ChannelFactory = {\n  optionsKey: 'native',\n\n  getChannel(name: string): Channel {\n    return new NativeChannel(name);\n  },\n\n  canBeUsed(): boolean {\n    return typeof BroadcastChannel === 'function';\n  },\n};\n\nexport default factory;\n","/**\n * Copied from: https://stackoverflow.com/a/68141099/1099999\n */\nexport function uuidv4() {\n  return '00-0-4-1-000'.replace(/[^-]/g,\n    (s: any) => ((Math.random() + ~~s) * 0x10000 >> s).toString(16).padStart(4, '0')\n  );\n}\n\n/**\n * Queue a new task in the event loop after the delay and let the thread deal with it as soon\n * as it's available for more work.\n *\n * See {@link https://stackoverflow.com/questions/9083594/call-settimeout-without-delay}\n *\n * @param fn - Task to defer\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function defer(fn: Function): void {\n  setTimeout(fn, 0);\n}\n"],"names":["BroadcastChannel","channel","onmessage","message","displayReceivedMessage","data","messageInput","document","getElementById","submitButton","messagesBox","onkeyup","event","value","key","postMessage","clearMessageInput","disableSubmitButton","enableSubmitButton","onclick","displayEmittedMessage","classList","add","remove","messageBalloon","side","section","createElement","balloon","messageContainer","text","createTextNode","appendChild","BroadcastChannelInstance","NativeChannel","LocalStorageChannel","FakeChannel","messageEvent","messageErrorEvent","EventTarget","defaultChannelsList","getOptimalChannel","name","options","channelFactory","backend","Error","channelOptions","optionsKey","getChannel","emitter","addEventListener","bind","removeEventListener","dispatchEvent","constructor","ev","_onmessage","onmessageerror","_onmessageerror","listener","close","DOMException","defer","uuidv4","deserialize","serialize","fakeChannels","Map","resetFakeChannel","clear","uuid","closed","MessageEvent","listeners","get","undefined","delete","size","err","dispatchMessageError","dispatchMessage","factory","Set","set","canBeUsed","default","channels","find","ObliviousSet","defaultOptions","removeTimeout","getLocalStorage","window","localStorage","e","storageEventListener","newValue","JSON","parse","addStorageEventListener","removeStorageEventListener","resetLocalStorage","Object","keys","filter","startsWith","KEY_PREFIX","forEach","removeItem","LocalStorage","assign","emittedMessagesIds","storageListener","storageKey","senderId","token","has","writeObj","stringify","setItem","StorageEvent","localstorage","error","cancelable","cb","replace","s","Math","random","toString","padStart","fn","setTimeout"],"sourceRoot":""}